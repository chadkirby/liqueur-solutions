{
  "extends": "@tsconfig/node18/tsconfig.json",
  "compilerOptions": {
    "baseUrl": ".",
    "outDir": "esm",
    "rootDir": ".",
    "composite": true,
    "module": "ES2020",

    "moduleResolution": "node",
    "noImplicitAny": true,
    "noImplicitThis": true,
    "alwaysStrict": true,
    "strictNullChecks": true,
    "strictPropertyInitialization": true,
    "noFallthroughCasesInSwitch": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noEmitOnError": false,
    "inlineSourceMap": true,
    "inlineSources": true,
    "experimentalDecorators": true,

    "allowJs": true /* Allow javascript files to be compiled. */,

    "checkJs": true /* Report errors in .js files. */,

    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "strict": true /* Enable all strict type-checking options. */
  },
  "include": ["src/**/*", "tests/**/*"],

  // Most ts-node options can be specified here using their programmatic names.
  "ts-node": {
    // It is faster to skip typechecking, but the resulting code &/or
    // source maps may differ from what tsc writes into dist
    "transpileOnly": false,

    // Load "files" and "include" from `tsconfig.json` on startup.
    "files": true,

    "esm": true,

    "ignore": ["(?:^|/)node_modules/", "(?:^|/)dist/"],

    "compilerOptions": {
      // compilerOptions specified here will override those declared
      // below, but *only* in ts-node.  Useful if you want ts-node and
      // tsc to use different options with a single tsconfig.json.
      "checkJs": false
    }
  }
}
