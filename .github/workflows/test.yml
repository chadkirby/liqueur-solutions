name: Run Tests

on: [push] # Run on all pushes

jobs:
  test:
    runs-on: ubuntu-latest
    environment: Preview
    # Environment variables available to all steps in this job
    env:
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ vars.PUBLIC_CLERK_PUBLISHABLE_KEY }}
      VOLTA_FEATURE_PNPM: 1
    steps:
      - uses: actions/checkout@v4

      - name: Install Volta
        uses: volta-cli/action@v4

      # Cache Strategy:
      # 1. Try exact match using pnpm-lock.yaml hash
      # 2. If no match, fall back to any previous cache for this OS
      # 3. If still no match, create new cache
      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          # Define what paths should be cached
          path: |
            **/node_modules
            ~/.pnpm-store
          # Primary cache key - unique per pnpm-lock.yaml change
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          # Fallback key - matches any previous cache for this OS/pnpm combo
          # Useful when dependencies partially change
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Similar cache strategy for Playwright browsers
      # Avoids re-downloading browsers on every run
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # Install dependencies if cache miss or partial hit
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: build
        run: pnpm build

      # Run type checking
      - name: Run Svelte Check
        run: pnpm svelte-check

      # Run unit tests
      - name: Run Unit Tests
        run: pnpm test:unit

      # Install Playwright if not in cache
      - name: Install Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          pnpm playwright install
          pnpm playwright install-deps

      # Run E2E tests
      - name: Run Playwright Tests
        run: pnpm test
